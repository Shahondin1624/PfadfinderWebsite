name: Release

on:
  push:
    branches:
      - master
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        id: artifact-upload-step
        with:
          path: ./composeApp/build/dist/wasmJs/productionExecutable/
          if-no-files-found: error
          retention-days: 1
          overwrite: true

      - name: Post Artifact ID
        run:  echo 'Artifact ID is ${{ steps.artifact-upload-step.outputs.artifact-id }}'

      - name: Get version
        id: get_version
        run: |
          version=$(./gradlew -q printVersion)
          echo "version=$version" >> $GITHUB_ENV

      - name: Create Directory
        run: mkdir -p ${{ runner.temp }}/artifact

      - name: Download Artifact by ID
        run: |
          curl -L -o ${{ runner.temp }}/artifact/artifact.zip -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/${{ steps.artifact-upload-step.outputs.artifact-id }}/zip"
      
      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: Release ${{ env.version }}
          tag_name: ${{ env.version }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload Artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ runner.temp }}/artifact/artifact.zip
          asset_name: pfadfinder-website-artifact.zip
          asset_content_type: application/zip

      - name: Unzip Artifact
        run: unzip ${{ runner.temp }}/artifact/artifact.zip -d ${{ runner.temp }}/artifact/unpacked/

      - name: Deploy to Github Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: ${{ runner.temp }}/artifact/unpacked/
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages

